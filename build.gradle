buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE")
    }
}
 
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
 
jar {
    baseName = 'JmsSqs'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8
 
repositories {
    mavenCentral()
    mavenLocal()
}

configurations.all {
  exclude group: 'javax.jms', module: 'jms'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework:spring-jms")
	compile("com.amazonaws:aws-java-sdk:1.9.6")
	compile("com.amazonaws:amazon-sqs-java-messaging-lib:1.0.0")	
        
    testCompile("org.springframework.boot:spring-boot-starter-test")
}
 
eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task copyTask(type: Copy) {
   	from 'build/libs'
   	from 'src/main/docker'
   	include '*.jar'
   	include 'Dockerfile'
   	include 'Dockerrun.aws.json'
   	include '.ebignore'
   	include 'eb-create-and-deploy.cmd'
   	into 'build/docker'
}

task buildDockerZip(type: Zip, dependsOn:copyTask) {
    from 'build/docker'
    include '*.jar'
    include 'Dockerfile'
    include 'Dockerrun.aws.json'
    archiveName baseName + 'Docker.zip'
}
 
task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

